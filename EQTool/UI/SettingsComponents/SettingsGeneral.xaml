<UserControl x:Class="EQTool.UI.SettingsComponents.SettingsGeneral"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EQTool.UI.SettingsComponents"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:models="clr-namespace:EQTool.Models"
             xmlns:markupExtensions="clr-namespace:EQTool.Services.MarkupExtensions"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="400">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </UserControl.Resources>
    <TabControl>
        
        <TabItem Header="General">
            <StackPanel Orientation="Vertical" Margin="5, 5, 5, 5">
                <StackPanel Orientation="Vertical" Visibility="{Binding MissingConfiguration, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                    <TextBlock Text="Configuration missing!" FontWeight="Bold" FontSize="20" Foreground="Red"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Eq Path"  VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100" Foreground="Red" Visibility="{Binding DoesNotHaveEqPath, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>
                    <TextBlock Text="Eq Path"  VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100" Foreground="Green" Visibility="{Binding HasEqPath, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}"/>
                    <StackPanel Orientation="Horizontal" >
                        <TextBlock Text="{Binding EqPath}" HorizontalAlignment="Left"/>
                        <Button Margin="5,0,0,0" HorizontalAlignment="Right" Click="EqFolderButtonClicked">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock>Browse</TextBlock>
                                <Image Source="pack://application:,,,/Images/open-folder.png" Height="{DynamicResource GlobalFontSize}" Margin="5,0,0,0" ></Image>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Eq Log Path"  VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100" Foreground="Red" Visibility="{Binding DoesNotHaveEqPath, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>
                    <TextBlock Text="Eq Log Path"   VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100" Foreground="Green" Visibility="{Binding HasEqPath, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}"/>
                    <TextBlock Text="{Binding EqLogPath}" HorizontalAlignment="Left" MinWidth="150"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal"  Visibility="{Binding HasEqPath, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}" >
                    <TextBlock Text="Logging"  VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100" Visibility="{Binding IsLoggingEnabled, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"/>
                    <TextBlock Text="Logging"  VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100" Foreground="Red"  Visibility="{Binding IsLoggingDisabled, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}"/>
                    <TextBlock Visibility="{Binding IsLoggingEnabled, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" Text="Logging Enabled!" Margin="5,5,0,0" HorizontalAlignment="Left" Foreground="Green"/>
                    <Button Visibility="{Binding IsLoggingDisabled, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}" Name="enableLogging" Margin="5,5,0,0" Click="enableLogging_Click">Enable Logging</Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Visibility="{Binding IsLoggingDisabled, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}"  >
                    <TextBlock HorizontalAlignment="Center" Text="You must enable loogging!"  FontWeight="Bold" Foreground="Red"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" Visibility="{Binding NotMissingConfiguration, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Visible}">
                    <TextBlock Visibility="{Binding HasNoCharName}" HorizontalAlignment="Center" Text="Functionality disabled until you log in!"  FontWeight="Bold" Foreground="Red"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Character" VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100"/>
                        <TextBlock Text="{Binding ActivePlayer.Player.Name}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Guild" VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100"/>
                        <TextBlock Text="{Binding ActivePlayer.Player.GuildName}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Class" VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100"/>
                        <ComboBox IsEnabled="{Binding HasCharName}" SelectedItem="{Binding ActivePlayer.Player.PlayerClass}" ItemsSource="{Binding PlayerClasses}" MinWidth="150"></ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Track Skill" VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100"/>
                        <ComboBox IsEnabled="{Binding ActivePlayer.Player.IsTrackableClass}" SelectedItem="{Binding ActivePlayer.Player.TrackingSkill}" ItemsSource="{Binding TrackSkills}" MinWidth="150"></ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Zone" FontWeight="Bold" VerticalAlignment="Center" MinWidth="100"/>
                        <ComboBox IsEnabled="{Binding HasCharName}" SelectedItem="{Binding ActivePlayer.Player.Zone}" ItemsSource="{Binding Zones}"  SelectionChanged="zoneselectionchanged" MinWidth="150"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Your Level"  FontWeight="Bold" VerticalAlignment="Center" MinWidth="100"/>
                        <ComboBox  IsEnabled="{Binding HasCharName}" SelectedItem="{Binding ActivePlayer.Player.Level}" ItemsSource="{Binding Levels}" MinWidth="150"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Font Size"  FontWeight="Bold"  VerticalAlignment="Center" MinWidth="100"/>
                        <ComboBox  SelectedItem="{Binding GlobalFontSize}" ItemsSource="{Binding FontSizes}" SelectionChanged="fontsizescombobox_SelectionChanged" MinWidth="150"/>
                    </StackPanel>

                    <TextBlock Text="Damage Window" HorizontalAlignment="Center" FontWeight="Bold" Margin="5,5,0,0"/>
                    <StackPanel Orientation="Vertical" Margin="0, 0, 0, 8">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Always on top" VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="120"/>
                            <CheckBox VerticalAlignment="Center" IsChecked="{Binding DpsAlwaysOnTop}" Click="SaveAlwaysOntopCheckBoxSettings" ></CheckBox>
                        </StackPanel>
                        
                        <StackPanel Orientation="Horizontal" Margin="20,0,0,3">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Opacity" Value="1.0"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DpsAlwaysOnTop}" Value="False">
                                            <Setter Property="Opacity" Value="0.5"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <TextBlock Text="Allow Click-Through" VerticalAlignment="Center" FontWeight="Bold" MinWidth="150"/>
                            <CheckBox VerticalAlignment="Center" IsChecked="{Binding DpsClickThroughAllowed}" Click="SaveClickThroughCheckBoxSettings"/>
                        </StackPanel>
                        
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Window Opacity"  VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="120"/>
                            <Slider Value="{Binding DPSWindowOpacity}" Minimum=".01" Maximum="1" SmallChange=".1" TickFrequency=".1" ValueChanged="SaveSettings" MinWidth="150"/>
                        </StackPanel>
                    </StackPanel>
                    <Separator/>
                    <TextBlock Text="Mob Window" HorizontalAlignment="Center" FontWeight="Bold" Margin="5,5,0,0"/>
                    <StackPanel Orientation="Vertical" Margin="0, 0, 0, 8">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Always on top" VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="120"/>
                            <CheckBox IsChecked="{Binding MobAlwaysOnTop}" Click="SaveAlwaysOntopCheckBoxSettings" ></CheckBox>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="20,0,0,3">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Opacity" Value="1.0"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MobAlwaysOnTop}" Value="False">
                                            <Setter Property="Opacity" Value="0.5"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <TextBlock Text="Allow Click-Through" VerticalAlignment="Center" FontWeight="Bold" MinWidth="150"/>
                            <CheckBox VerticalAlignment="Center" IsChecked="{Binding MobClickThroughAllowed}" Click="SaveClickThroughCheckBoxSettings"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Login middlemand" VerticalAlignment="Center"  FontWeight="Bold" MinWidth="120"/>
                            <CheckBox  Name="LoginMiddleMandCheckBox" Click="LoginMiddleMandToggle" MinWidth="75"></CheckBox>
                        </StackPanel>
                    </StackPanel>
                    <TextBlock Text="Login Middlemand is a copy of the code from:"></TextBlock>
                    <TextBlock Text="https://github.com/Zaela/p99-login-middlemand"></TextBlock>
                    <TextBlock Text="Please, report any issues on discord!"></TextBlock>
                    <Separator/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Group Leader: " VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="120" Margin="0,5,0,0"/>
                        <TextBlock Text="{Binding GroupLeaderName}" HorizontalAlignment="Center" FontWeight="Bold" FontStyle="Italic" Foreground="Blue" Margin="0,5,0,0"/>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </TabItem>
        
        <TabItem Header="Text &amp; Audio Alerts">
            <StackPanel Orientation="Vertical" Margin="5, 5, 5, 5">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Installed Voices" VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100"/>
                    <ComboBox SelectedItem="{Binding SelectedVoice}" ItemsSource="{Binding InstalledVoices}" MinWidth="105"></ComboBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="textvoice" ToolTip="Test Voice" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" FontWeight="Bold"  MinWidth="75"/>
                    <TextBlock Text="Text Alert" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="75"/>
                    <TextBlock Text="Audio Alert" VerticalAlignment="Center" FontWeight="Bold"  />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Select All Timers"  VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="selectallVisual" ToolTip="Select All Visual" />
                    <Button Margin="60,0,0,0" Content="▶" FontSize="7" Width="14" Height="14" Padding="0" Click="selectallAudio" ToolTip="Select All Audio" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Enraged"  VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.EnrageOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.EnrageAudio}" Click="Savesettings" MinWidth="30"></CheckBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="testenrage" ToolTip="Test Enrage" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Levitate Fading" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.LevFadingOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.LevFadingAudio}" Click="Savesettings" MinWidth="30"></CheckBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="testlevfading" ToolTip="Test Levitate fading" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Invis Fading" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.InvisFadingOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.InvisFadingAudio}" Click="Savesettings" MinWidth="30"></CheckBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="testinvisfading" ToolTip="Test Invis Fading" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="FTE" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.FTEOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.FTEAudio}" Click="Savesettings" MinWidth="30"></CheckBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="testFTE" ToolTip="Test FTE" />
                </StackPanel> 
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Charm Break" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.CharmBreakOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.CharmBreakAudio}" Click="Savesettings" MinWidth="30"></CheckBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="testCharmBreak" ToolTip="Test Charm Break" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Failed Feign" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.FailedFeignOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.FailedFeignAudio}" Click="Savesettings" MinWidth="30"></CheckBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="testFailedFeign" ToolTip="Test Failed Feign" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Group Invite" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.GroupInviteOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.GroupInviteAudio}" Click="Savesettings" MinWidth="30"></CheckBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="testGroupInvite" ToolTip="Test Group Invite" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Dragon Roar" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.DragonRoarOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.DragonRoarAudio}" Click="Savesettings" MinWidth="30"></CheckBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="testDragonRoar" ToolTip="Test Dragon Roar" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Root Breaks" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.RootWarningOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.RootWarningAudio}" Click="Savesettings" MinWidth="30"></CheckBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="testRootBreak" ToolTip="Test Root Break" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Resists" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.ResistWarningOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.ResistWarningAudio}" Click="Savesettings" MinWidth="30"></CheckBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="testResists" ToolTip="Test Resist" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Death Loop" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.DeathLoopOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.DeathLoopAudio}" Click="Savesettings" MinWidth="30"></CheckBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="testDeathLoop" ToolTip="Test Death Loop" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Entered Zone" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.EnteringZoneOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.EnteringZoneAudio}" Click="Savesettings" MinWidth="30"></CheckBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="textenteringZone" ToolTip="Test Entering Zone" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="NPC Gating" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.MobGatingOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.MobGatingAudio}" Click="Savesettings" MinWidth="30"></CheckBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="testMobGating" ToolTip="Test Mob Gating" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Spell Worn Off" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.WornOffOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.WornOffAudio}" Click="Savesettings" MinWidth="30"></CheckBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="testWornOff" ToolTip="Test Spell Has Worn Off" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Tells You" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.TellsYouOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.TellsYouAudio}" Click="Savesettings" MinWidth="30"></CheckBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="testTellsYou" ToolTip="Test tells to you" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Run Speed" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.RunSpeedOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                </StackPanel>
                <Separator/>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Chain Formats" VerticalAlignment="Center" FontWeight="Bold" MinWidth="100"/>
                    <TextBlock>
                        <Hyperlink NavigateUri="https://github.com/smasherprog/EqTool/blob/main/README.md#ch-format-is-loosely-tag-position-ch-target" RequestNavigate="Hyperlink_RequestNavigate">Chain Help</Hyperlink>
                    </TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="CH Chain" ToolTip="Complete Heal Overlay" VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.ChChainOverlay}" Click="Savesettings" MinWidth="105"></CheckBox>
                    <Button Content="▶" Margin="1" FontSize="7" Width="14" Height="14" Padding="0" Click="testChChain" ToolTip="Test CH Chain" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="CH Chain Tag" ToolTip="Example: GG or CA. Other tags will be ignored" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <TextBox Text="{Binding Path=ActivePlayer.Player.ChChainTagOverlay, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinWidth="40" TextChanged="CHTextBox_TextChanged"></TextBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Ch Warning" ToolTip="Ch Warning" VerticalAlignment="Center" FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.ChChainWarningOverlay}" Click="Savesettings" MinWidth="75"></CheckBox>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.ChChainWarningAudio}" Click="Savesettings" MinWidth="30"></CheckBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Above will warn you when its your turn to cast CH" Foreground="Red"/>
                </StackPanel>
                <Separator/> 
            </StackPanel>
        </TabItem>
        
        <TabItem Header="Triggers">
            <StackPanel Orientation="Vertical" Margin="5, 5, 5, 5">
                <StackPanel Orientation="Vertical"  Margin="0, 0, 0, 8">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Boat Schedule"  VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100"/>
                        <CheckBox IsChecked="{Binding ActivePlayer.Player.BoatSchedule}" Click="Savesettings" MinWidth="75"></CheckBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Ring 8 Timer"  VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100"/>
                        <CheckBox IsChecked="{Binding ShowRing8RollTime}" Click="Savesettings" MinWidth="75"></CheckBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Scout Timer"  VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100"/>
                        <CheckBox IsChecked="{Binding ShowScoutRollTime}" Click="Savesettings" MinWidth="75"></CheckBox>
                    </StackPanel>
                    <DockPanel>
                        <TextBlock MaxWidth="400" TextWrapping="Wrap" Text="Boat times are constantly being tweaked. More boats will be working soon!" />
                    </DockPanel>
                    <StackPanel Orientation="Horizontal" ToolTip="This setting will switch to show only spells you care about when raid mode is detected.">
                        <TextBlock Text="Raid Detection" VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100"/>
                        <CheckBox IsChecked="{Binding RaidModeDetection}" Click="Savesettings"></CheckBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Always on top" VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100"/>
                        <CheckBox IsChecked="{Binding SpellAlwaysOnTop}" Click="SaveAlwaysOntopCheckBoxSettings" ></CheckBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="20,0,0,3">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Opacity" Value="1.0"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SpellAlwaysOnTop}" Value="False">
                                        <Setter Property="Opacity" Value="0.5"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="Allow Click-Through" VerticalAlignment="Center" FontWeight="Bold" MinWidth="130"/>
                        <CheckBox VerticalAlignment="Center" IsChecked="{Binding SpellClickThroughAllowed}" Click="SaveClickThroughCheckBoxSettings"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Window Opacity"  VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100"/>
                        <Slider Value="{Binding TriggerWindowOpacity}" Minimum=".01" Maximum="1" SmallChange=".1" TickFrequency=".1" ValueChanged="SaveSettings" MinWidth="150"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Random Rolls" ToolTip="Show Random rolls in Triggers window" VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100"/>
                        <CheckBox IsChecked="{Binding ShowRandomRolls}" Click="SaveAlwaysOntopCheckBoxSettings" ></CheckBox>
                    </StackPanel>
                    <GroupBox Header="Group Spells By Spell Name?" Margin="0,5,0,5">
                        <StackPanel Orientation="Vertical" Margin="5">
                            <StackPanel Orientation="Horizontal" Margin="0,2,0,2">
                                <TextBlock Text="Detrimental Spells" VerticalAlignment="Center" MinWidth="100" />
                                <CheckBox VerticalAlignment="Center" IsChecked="{Binding DetrimentalSpellsCategorizedBySpellName}" Click="Savesettings"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,2,0,2">
                                <TextBlock Text="Beneficial Spells" VerticalAlignment="Center" MinWidth="100" />
                                <CheckBox VerticalAlignment="Center" IsChecked="{Binding BeneficialSpellsCategorizedBySpellName}" Click="Savesettings"/>
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="If detrimental timer is already running: " 
                                   ToolTip="Hint: Select 'StartNewTimer' for targets with same name"
                                   VerticalAlignment="Center"  
                                   FontWeight="Bold"  
                                   MinWidth="100"/>
                        <ComboBox SelectedItem="{Binding ActivePlayer.Player.TimerRecastSetting}" 
                                  ItemsSource="{Binding TimerRecastOptions}" 
                                  ToolTip="Hint: Select 'StartNewTimer' for targets with same name"
                                  Margin="0,5,0,0" 
                                  FontSize="14" 
                                  MinWidth="170" 
                                  VerticalAlignment="Center">
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Spell Filters" VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100"/>
                        <ComboBox SelectedItem="{Binding SpellsFilter}" ItemsSource="{Binding Source={markupExtensions:EnumBindingSource {x:Type models:SpellsFilterType}}}" MinWidth="100"></ComboBox>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Visibility="{Binding ShowClassFilters, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <TextBlock Text="Class Filters" FontWeight="Bold" MinWidth="100" ToolTip="This will filter what shows up on other players."/>
                    <StackPanel Orientation="Vertical">
                        <ListBox IsEnabled="{Binding HasCharName}" ItemsSource="{Binding SelectedPlayerClasses}" MinWidth="150">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox Content="{Binding TheText}" Tag="{Binding TheValue}" Unchecked="CheckBoxZone_Checked" Checked="CheckBoxZone_Checked" IsChecked="{Binding IsChecked}" Margin="0,5,0,0"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </StackPanel>
                </StackPanel>
            </StackPanel>
        </TabItem>
         
        <TabItem Header="Map">
            <StackPanel Orientation="Vertical" Margin="5, 5, 5, 5">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Always on top" VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding MapAlwaysOnTop}" Click="SaveAlwaysOntopCheckBoxSettings" ></CheckBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="20,0,0,3">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Opacity" Value="1.0"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MapAlwaysOnTop}" Value="False">
                                    <Setter Property="Opacity" Value="0.5"/>
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Text="Allow Click-Through" VerticalAlignment="Center" FontWeight="Bold" MinWidth="130"/>
                    <CheckBox VerticalAlignment="Center" IsChecked="{Binding MapClickThroughAllowed}" Click="SaveClickThroughCheckBoxSettings"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Map Cache" VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100"/>
                    <Button Click="deleteMapCache" ToolTip="Do this if you are managing map files and make changes.">Delete Cached Maps</Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Map Kill timers" ToolTip="Automatically add kill timers to the map. This is a per character setting" VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.MapKillTimers}"></CheckBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Window Opacity" VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100"/>
                    <Slider Value="{Binding MapWindowOpacity}" Minimum=".01" Maximum="1" SmallChange=".1" TickFrequency=".1" ValueChanged="SaveSettings" MinWidth="150"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Location Share" VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100"/>
                    <ComboBox SelectedItem="{Binding ActivePlayer.Player.MapLocationSharing}" ItemsSource="{Binding LocationShareOptions}" MinWidth="150"></ComboBox>
                </StackPanel>
            </StackPanel>
        </TabItem>
        
        <TabItem Header="Experimental">
            <StackPanel Orientation="Vertical" Margin="5, 5, 5, 5" HorizontalAlignment="Stretch"> 
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Timer Sharing"  VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100"/>
                    <CheckBox IsChecked="{Binding ActivePlayer.Player.ShareTimers}" Click="Savesettings" MinWidth="75"></CheckBox>
                </StackPanel>
                <DockPanel>
                    <TextBlock MaxWidth="400" TextWrapping="Wrap" Text="When this is checked, timers will be shared with those around you for detrimental spells. So, if you slow a mob, anyone within range will also see the slow timer. Same for dragon effects!" />
                 </DockPanel> 
                <TextBlock Text="Console Debugging" HorizontalAlignment="Center" FontWeight="Bold" Margin="5,5,0,0"/>
                <StackPanel Orientation="Vertical" Margin="0, 0, 0, 8"> 
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Window" VerticalAlignment="Center" FontWeight="Bold" MinWidth="100"/>
                        <Button Click="openConsoleWindow">Open</Button>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Map Logging" VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100"/>
                        <CheckBox x:Name="MapConsoleLog" Click="toggleMapConsoleOutput" MinWidth="75"></CheckBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Spell Logging" VerticalAlignment="Center"  FontWeight="Bold"  MinWidth="100"/>
                        <CheckBox Name="SpellConsoleLog" Click="toggleSpellConsoleOutput" MinWidth="75"></CheckBox>
                    </StackPanel>
                </StackPanel> 
            </StackPanel>
        </TabItem>
        
        <TabItem Header="Debug" Name="DebugTab">
            <StackPanel Orientation="Vertical" Margin="5, 5, 5, 5" HorizontalAlignment="Stretch">  
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Random Roll"  VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100"/>
                    <Button Click="testRandomRolls" MinWidth="100">Test Random Rolls</Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="DPS"  VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100"/>
                    <Button Click="testDPS" MinWidth="100">Add Test DPS</Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Spells"  VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100"/>
                    <Button Click="testspellsclicked"  MinWidth="100">Add Test Spells</Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Share Timers"  VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100"/>
                    <Button Click="testsharetimers"  MinWidth="100">Share Timers Test</Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Map"  VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100"/>
                    <Button Click="textmapclicked" MinWidth="100">Test Locations</Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Map"  VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100"/>
                    <Button Click="testsignalrlocations" MinWidth="100">Test Signalr Locations</Button>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Run Log File"  VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100"/>
                    <Button Click="selectLogFile">Select File</Button>
                </StackPanel> 
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                    <TextBlock Text="Log Push"  VerticalAlignment="Center"  FontWeight="Bold" MinWidth="100"/>
                    <TextBox x:Name="LogPushText" MinWidth="150"></TextBox>
                    <Button Click="logpush">Push</Button>
                </StackPanel>
            </StackPanel>
        </TabItem>
    </TabControl>
</UserControl>
